apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 293
        versionName "18"

        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
        multiDexEnabled true
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/TrainedModels'] } }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'https://anylinesdk.blob.core.windows.net/maven/'
    }
}

configurations {
    customImplementation
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'

    //include AnylineSDK from locale lbs folder
    //api(name:'anylinesdk-release-18', ext:'aar')

    //include AnylineSDK from mave
    api 'io.anyline:anylinesdk:18@aar'

    implementation 'io.intercom.android:intercom-sdk:5.1.6'

    /// include the vision-version we need for barcode scanning
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'
    implementation 'com.google.firebase:firebase-ml-vision-face-model:17.0.2'
    implementation 'com.madgag.spongycastle:core:1.54.0.0'
    implementation 'com.madgag.spongycastle:pkix:1.54.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'


    customImplementation('io.anyline:anylinesdk:18@aar')
}

